{
  "hash": "83eb7be322da1b6dd3336764a4e250c7",
  "result": {
    "markdown": "---\ntitle: \"R API to download FAO's WaPOR datasets\"\ndescription: \"A R API package to query and download FAO's WaPOR raster datasets.\"\nauthor: \"Darius A. Görgen\"\nlayout: post\ndate: 2020-10-31 11:15\ncategories: [\"R\", \"raster\", \"FAO WAPOR\", \"API\"]\nheaderImage: false\nhidden: false # don't count this post in blog pagination\nengine: knitr\nimage: wapor.png\n---\n\n\n![Screenshot](wapor.png)\n\n*Screenshot of from the [WaPOR](https://wapor.apps.fao.org/home/WAPOR_2/1) website*\n\n### What is it about?\n\nThe [WaPOR](https://wapor.apps.fao.org/home/WAPOR_2/1) project by FAO offers some \nawesome remote sensing products concerned with water usage in agriculture on the \nAfrican continent. A great variety of different products, among them net- and \ngross-biomass-water-productivity, evaporation, transpiration, and interception as \nwell as biomass production, are provided at a spatial resolution ranging between \n250 meters up-to 30 meters for selected agricultural regions. \n\nThere are already some Python packages out there that allow users to programmatically\naccess the WaPOR data portal such as [hkvwaporpy](https://github.com/HKV-products-services/hkvwaporpy) \nor [IHEWAwapor](https://github.com/wateraccounting/IHEWAwapor). However, I was not\nable to find similar functionality for R users. So I just went on and wrote an\nexperimental package in R, which can be used to download raster data.\n\n### What can it do?\n\nTo install and use the package, you should utilize `remotes` functionality.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!\"wapoR\" %in% installed.packages()[,1]){\n  remotes::install_github(\"goergen95/wapoR\")\n}\nlibrary(wapoR)\n```\n:::\n\n\nFrom there, it is quite straightforward to query available collections. Note that\nthere are other collections available for which, in principal, it should be possible\nto download the data in the same way. But this package was primarily intended to\ninteract with the WaPOR collections.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncols = wapor_collections()\ncols[rev(seq(1,nrow(cols),)),c(1:2)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            code\n28          WPOP\n27         WATER\n26       WAPOR_2\n25           RVF\n24        RSCROP\n23      RICCAR_2\n22        RICCAR\n21          RDMS\n20          NMME\n19 NATURAL_EARTH\n18          NASA\n17          GLW4\n16          GLW3\n15           GLW\n14        GLEAM3\n13   GISMGR_TEST\n12       GAEZ_V4\n11     GAEZ_2015\n10      FROM_GLC\n9        FAOSTAT\n8           DLMF\n7           CRTB\n6      CROPWATCH\n5         CHIRPS\n4            C3S\n3        C2ATLAS\n2           ASIS\n1       AQUAMAPS\n                                                                       caption\n28                                                            WorldPop project\n27                                                                  Water Data\n26                           FAO Water Productivity Open-access portal (WaPOR)\n25                                                           Rift Valley Fever\n24                     Crop Pest and Disease Monitoring and Forecasting System\n23                              Regional Arab Climate Change Assessment Report\n22                              Regional Arab Climate Change Assessment Report\n21                                          Regional Drought Monitoring System\n20                                  North American Multi-Model Ensemble (NMME)\n19                                                               Natural Earth\n18                        National Aeronautics and Space Administration (NASA)\n17                                 Gridded Livestock of the World (GLW4, 2015)\n16                                 Gridded Livestock of the World (GLW3, 2010)\n15                                              Gridded Livestock of the World\n14                    Global Livestock Environmental Assessment Model (GLEAM3)\n13                      FAO GIS MANAGER (GISMGR) - Test and training workspace\n12                                         Global Agro-Ecological Zones (2021)\n11                                         Global Agro-Ecological Zones (2015)\n10 Finer Resolution Observation and Monitoring of Global Land Cover (FROM-GLC)\n9                                           FAO Corporate Statistical Database\n8                                     Desert Locust Monitoring and Forecasting\n7                                                  Climate Risk Toolbox (CRTB)\n6                                                                    CropWatch\n5           Climate Hazard group InfraRed Precipitation with Stations (CHIRPS)\n4                                            Copernicus Climate Change Service\n3                                                         Climate Change ATLAS\n2                                              Agriculture Stress Index System\n1                             Global spatial database on water and agriculture\n```\n:::\n:::\n\n\nI reversed the order of the collections vector so that you can see that there\nare two available WaPOR collections representing version 1 and 2, respectively.\nI would advise using the updated version 2 if you do not have other reasons\nto use the first version.\n\nWe can query the available products within a collection by using `wapor_products`\ntogether with the collection we wish to query.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprods = wapor_products(collection = \"WAPOR_2\")\n\nprint(paste0(\"In total there are \", length(prods), \" available products in the WAPOR_2 collection.\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"In total there are 285 available products in the WAPOR_2 collection.\"\n```\n:::\n\n```{.r .cell-code}\nstr(prods[1])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 1\n $ L1_GBWP_A:List of 2\n  ..$ product:'data.frame':\t1 obs. of  3 variables:\n  .. ..$ code       : chr \"L1_GBWP_A\"\n  .. ..$ caption    : chr \"Gross Biomass Water Productivity\"\n  .. ..$ description: chr \"The annual Gross Biomass Water Productivity expresses the quantity of output (total biomass production) in rela\"| __truncated__\n  ..$ meta   :'data.frame':\t1 obs. of  12 variables:\n  .. ..$ format                : chr \"Raster Dataset\"\n  .. ..$ unit                  : chr \"kg/m³ is the ratio of kg of dry matter per cubic meter of water transpired by vegetation in one hectare\"\n  .. ..$ dataType              : chr \"Int32 (32bit Integer)\"\n  .. ..$ conversionFactor      : chr \"the pixel value in the downloaded data must be multiplied by 0.001\"\n  .. ..$ noDataValue           : int -9999\n  .. ..$ spatialResolution     : chr \"250m (0.00223 degree)\"\n  .. ..$ spatialExtent         : chr \"Africa and Near East\"\n  .. ..$ spatialReferenceSystem: chr \"EPSG:4326 - WGS84 - Geographic Coordinate System (lat/long)\"\n  .. ..$ temporalResolution    : chr \"from January 2009 to present\"\n  .. ..$ temporalExtent        : chr \"Annual\"\n  .. ..$ nearRealTime          : chr \"New dekadal data layers are released approximately 5 days after the end of a dekad. A higher quality version of\"| __truncated__\n  .. ..$ methodology           : chr \"The calculation of gross biomass water productivity (GBWP) is as follows: GBWP = TBP/ETIa Where TBP is annual T\"| __truncated__\n```\n:::\n\n```{.r .cell-code}\nnames(prods)[1:10]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"L1_GBWP_A\" \"L1_NBWP_A\" \"L1_AETI_A\" \"L1_AETI_M\" \"L1_AETI_D\" \"L1_T_A\"   \n [7] \"L1_E_A\"    \"L1_I_A\"    \"L1_T_D\"    \"L1_E_D\"   \n```\n:::\n:::\n\nThe total number of products is relatively high. The product names consist first of\nthe level a respective product belongs to. Level 1 means this product belongs to the\ncontinental products covering the African continent at a spatial resolution of about \n250 meters. Level 2 products show a resolution of 100 meters. However, they are\nonly available for selected countries. Finally, level 3 data is available for only\na few specific agricultural regions, but the spatial resolution is about 30 meters. \n\nThe second component in the product name specifies the variable. For example, \nGBWP stands for **G**ross **B**iomass **W**ater **P**roductivity or AETI for\n**A**ctual **E**vapo**t**ranspiraton and **I**nterception. You can check out the\n[WaPOR catalog](https://wapor.apps.fao.org/catalog/WAPOR_2/1) to see all available products, or you search through the \nproduct list as some metadata is also included in the above object.\n\nThe last component of a product name specifies its temporal resolution, where A stands\nfor annual, M for monthly, D for decadal, and S for a seasonal temporal resolution.\n\nLet's assume we decided to download some level 3 data for the Office du Niger agricultural region.\nFirst, let's take a look at the available products:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(prods)[grep(\"L3_ODN\", names(prods))]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"L3_ODN_GBWP_S\"       \"L3_ODN_NBWP_S\"       \"L3_ODN_AETI_A\"      \n [4] \"L3_ODN_AETI_M\"       \"L3_ODN_AETI_D\"       \"L3_ODN_T_A\"         \n [7] \"L3_ODN_E_A\"          \"L3_ODN_I_A\"          \"L3_ODN_T_D\"         \n[10] \"L3_ODN_E_D\"          \"L3_ODN_I_D\"          \"L3_ODN_NPP_M\"       \n[13] \"L3_ODN_NPP_D\"        \"L3_ODN_TBP_S\"        \"L3_ODN_LCC_D\"       \n[16] \"L3_ODN_PHE_S\"        \"L3_ODN_QUAL_LCC_S\"   \"L3_ODN_QUAL_NDVI_D\" \n[19] \"L3_ODN_QUAL_NDVI_LT\"\n```\n:::\n:::\n\nFor the sake of a quick example, let's say we are interested in the actual\nevapotranspiration and interception for the year 2018. We can query some additional\nmetadata about this product with the following command:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmeta = wapor_metadata(collection = \"WAPOR_2\", product = \"L3_ODN_AETI_A\")\nstr(meta)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 3\n $ info      :'data.frame':\t1 obs. of  5 variables:\n  ..$ code      : chr \"WATER_MM\"\n  ..$ caption   : chr \"Amount of Water\"\n  ..$ unit      : chr \"mm\"\n  ..$ scale     : int 3\n  ..$ multiplier: num 0.1\n $ dimensions:'data.frame':\t1 obs. of  3 variables:\n  ..$ code   : chr \"YEAR\"\n  ..$ caption: chr \"Year\"\n  ..$ type   : chr \"TIME\"\n $ meta      :'data.frame':\t1 obs. of  12 variables:\n  ..$ format                : chr \"Raster Dataset\"\n  ..$ unit                  : chr \"mm\"\n  ..$ dataType              : chr \"Int32 (32bit Integer)\"\n  ..$ conversionFactor      : chr \"the pixel value in the downloaded data must be multiplied by 0.1\"\n  ..$ noDataValue           : int -9999\n  ..$ spatialResolution     : chr \"30m\"\n  ..$ spatialExtent         : chr \"Office du Niger, Mali\"\n  ..$ spatialReferenceSystem: chr \"EPSG:32630 - WGS 84 / UTM zone 30N\"\n  ..$ temporalResolution    : chr \"from January 2009 to present\"\n  ..$ temporalExtent        : chr \"Annual\"\n  ..$ nearRealTime          : chr \"New dekadal data layers are released approximately 5 days after the end of a dekad. A higher quality version of\"| __truncated__\n  ..$ methodology           : chr \"See ETIa by dekad for further information. The annual total is obtained by taking the ETIa in mm/day, multiplyi\"| __truncated__\n```\n:::\n:::\n\nFrom the above, we already get a lot of useful information. For example, we see that\nthe product is available between 2009 and the current year and is provided in \na projected coordinate reference system. We also can see that the unit of the pixel\nvalues is in millimeters bit that the pixel value shall be multiplied with a scale\nfactor of 0.1. This is essential information, and it should be checked for all \nWaPOR products since most of them were rescaled to reduce file size. \n\nMaybe the most important aspect of the above output for the next step, \nis the dimensions dataframe. Here we can see that the selected product only shows\none dimension called \"YEAR\" which type is time. Other products\nmight have further dimensions, such as \"SEASON\" which needs different specification\nin the download call.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwapor_queryRaster(collection = \"WAPOR_2\",\n                  product = \"L3_ODN_AETI_A\",\n                  begin = \"2018-01-01\", # begin date is inclusive\n                  end = \"2019-01-01\", # end date is exclusive\n                  outdir = \".\",\n                  APIkey = Sys.getenv(\"WAPOR-KEY\")) \n```\n:::\n\nLet's take a glimpse at the data we just downloaded.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(raster)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: sp\n```\n:::\n\n```{.r .cell-code}\nfile = list.files(\".\", \"L3_ODN\", full.names = T)\nr = raster(file) * 0.1\nplot(r)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/odn-vis-1.png){width=672}\n:::\n:::\n\n\nWe very quickly downloaded some important data for an assessment of agricultural\npractices in ODN. This package's download functionality can be used to \ndownload specific regions from Level 2 or 3 datasets by providing an sf object\nof an area of interest. Additionally, complete-time series can be downloaded by\nadapting the start and end date. Check out the [README](https://github.com/goergen95/wapoR) of the package for another\nexample to download some data and leave an issue if you face any problems using\nthis package. \n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}